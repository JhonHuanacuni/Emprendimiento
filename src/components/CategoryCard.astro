---
const { categoria } = Astro.props;
---
<a
  href="#"
  class="block p-4 bg-white rounded-lg shadow-md hover:shadow-lg transition transform hover:scale-105 categoria-btn"
  data-categoria={categoria.nombre}
>
  <div class="flex items-center justify-center text-center space-x-2">
    <span class="text-3xl">{categoria.icono}</span>
    <h2 class="text-xl font-semibold text-gray-900">
      {categoria.nombre.charAt(0).toUpperCase() + categoria.nombre.slice(1)}
    </h2>
  </div>
</a>

<script>
  import { generarSlug } from "../utils/slug";

  document.addEventListener("DOMContentLoaded", () => {
    const categoriaContenido = document.getElementById("categoria-contenido") as HTMLDivElement;

    async function cargarProductos() {
      try {
        const response = await fetch("/data/productos.json");
        const productos = await response.json();

        // Mostrar productos de la categoría seleccionada
        function mostrarProductos(categoria: any) {
          const productosCategoria = productos[categoria];

          // Limpiar el div antes de mostrar los productos
          categoriaContenido.innerHTML = "";
          categoriaContenido.classList.add("bg-gray-100", "p-6", "rounded-lg", "shadow-lg");

          // Añadir clases de grid para organizar los productos
          categoriaContenido.classList.add("grid", "grid-cols-1", "gap-6", "sm:grid-cols-2", "lg:grid-cols-3");

          if (productosCategoria && productosCategoria.length > 0) {
            productosCategoria.forEach((producto: any) => {
              const productoDiv = document.createElement("div");
              productoDiv.classList.add("producto", "bg-white", "p-4", "rounded-lg", "shadow-md", "hover:shadow-lg", "transition-all");

              // Generar el slug para el nombre del producto
              const slug = generarSlug(producto.nombre);

              // Crear el enlace para el producto con el slug
              const productoLink = document.createElement("a");
              productoLink.href = `/${categoria}/${slug}`; // Ruta dinámica con el slug
              productoLink.classList.add("text-xl", "font-semibold", "text-blue-500", "hover:text-blue-700", "transition-colors");

              // Agregar el contenido del producto al enlace
              productoLink.innerHTML = `
                <h3 class="text-lg font-semibold">${producto.nombre}</h3>
                <p class="text-sm text-gray-600">${producto.descripcion}</p>
                <p class="font-medium text-lg text-green-600">Precio: $${producto.precio}</p>
              `;

              // Añadir el enlace al div del producto
              productoDiv.appendChild(productoLink);

              // Añadir el div del producto al contenedor
              categoriaContenido.appendChild(productoDiv);
            });
          } else {
            categoriaContenido.innerHTML = "<p class='text-gray-500 text-center'>No hay productos en esta categoría.</p>";
          }
        }

        const categoriaButtons = document.querySelectorAll(".categoria-btn");

        // Asignar el evento a cada categoría
        categoriaButtons.forEach((button) => {
          button.addEventListener("click", (event) => {
            event.preventDefault(); // Previene la recarga de la página
            const categoria = button.getAttribute("data-categoria");
            mostrarProductos(categoria);
          });
        });

        // Seleccionar automáticamente la primera categoría y mostrar sus productos
        const primeraCategoria = Object.keys(productos)[0]; // Obtener el nombre de la primera categoría
        mostrarProductos(primeraCategoria); // Mostrar productos de la primera categoría

        // Resaltar el primer botón (opcional)
        categoriaButtons[0]?.classList.add("bg-blue-200", "text-blue-700"); // Resaltar el primer botón (opcional)

      } catch (error) {
        console.error("Error al cargar los productos:", error);
      }
    }

    cargarProductos();
  });
</script>
