---
import Layout from "../layouts/Layout.astro";
import productosJson from "../data/productos.json";

// Definir el tipo para las categorías disponibles
type Categoria = 'belleza' | 'deporte' | 'hogar' | 'moda' | 'tecnologia';

// Definir la interfaz para los productos
interface Producto {
  nombre: string;
  descripcion: string;
  link: string;
}

// `getStaticPaths()` para generar las rutas estáticas
export async function getStaticPaths(): Promise<{ params: { categoria: string } }[]> {
  // Obtener todas las categorías de productos
  const categorias: Categoria[] = Object.keys(productosJson) as Categoria[]; // Aseguramos que las categorías sean válidas

  // Devolver las rutas para cada categoría
  return categorias.map((categoria) => ({
    params: { categoria }
  }));
}

// Obtener el parámetro de la URL
const { categoria } = Astro.params as { categoria?: string };

// Asegurarnos de que la categoría sea válida (especificamos que solo puede ser una categoría válida)
const productos: Producto[] = categoria && productosJson[categoria as Categoria] ? productosJson[categoria as Categoria] : [];
---

<Layout>
  <h1 class="text-3xl font-bold text-center my-6 capitalize">{categoria ?? "Categoría no encontrada"}</h1>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 px-4">
    {productos.length > 0
      ? productos.map((producto) => (
          <a href={producto.link} class="block bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition">
            <h2 class="text-xl font-semibold">{producto.nombre}</h2>
            <p class="text-gray-600">{producto.descripcion}</p>
          </a>
        ))
      : <p class="text-center text-gray-500">No hay productos en esta categoría.</p>
    }
  </div>
</Layout>
