---
import Layout from "../../../layouts/Layout.astro";
import { categorias } from "../../../data/categorias";
import { generarSlug } from "../../../utils/slug";

// Componentes especÃ­ficos por categorÃ­a
import LibroDetalles from "../../../components/categorias/LibroDetalles.astro";
import ProductoGeneral from "../../../components/ProductoGeneral.astro";

// RelaciÃ³n categorÃ­a â†’ componente
const componentesPorCategoria: Record<string, (_props: Record<string, any>) => any> = {
  libros: LibroDetalles,
  // Puedes aÃ±adir mÃ¡s componentes aquÃ­ si los tienes
};

// ðŸ“Œ FunciÃ³n para generar rutas estÃ¡ticas
export async function getStaticPaths() {
  const paths: { params: { categoria: string; producto: string } }[] = [];

  categorias.forEach((categoriaObj) => {
    const categoriaSlug = categoriaObj.nombre.toLowerCase();

    categoriaObj.productos.forEach((producto) => {
      const productoSlug = generarSlug(producto.nombre);
      paths.push({ params: { categoria: categoriaSlug, producto: productoSlug } });
    });
  });

  return paths;
}

// ðŸ“Œ Obtener la categorÃ­a y el producto desde la URL
const { categoria, producto } = Astro.params;

// ðŸ“Œ Buscar categorÃ­a en el array
const categoriaData = categorias.find(
  (c) => c.nombre.toLowerCase() === categoria
);

// ðŸ“Œ Obtener el producto correspondiente comparando slugs
const productoSeleccionado = categoriaData?.productos.find(
  (p) => generarSlug(p.nombre) === producto
);

// ðŸ“Œ Seleccionar componente adecuado solo si hay producto
const tieneComponenteEspecifico =
  categoriaData?.nombre && categoriaData.nombre.toLowerCase() in componentesPorCategoria;

const ComponenteDetalles = productoSeleccionado
  ? (tieneComponenteEspecifico
      ? componentesPorCategoria[categoriaData!.nombre.toLowerCase()]
      : ProductoGeneral)
  : null;

// âœ… Imagen principal segura
const imagenPrincipal = productoSeleccionado?.img
  ? Array.isArray(productoSeleccionado.img)
    ? productoSeleccionado.img[0]
    : productoSeleccionado.img
  : "/images/default.jpg";
---


<Layout>
  <div class="container mx-auto px-4 py-10">
    <div class="flex flex-col md:flex-row gap-8 justify-center">
      {productoSeleccionado && ComponenteDetalles ? (
        <>
          {/*
          <div class="md:w-1/2 w-full">
            <img
              src={imagenPrincipal}
              alt={productoSeleccionado.nombre}
              class="w-full h-full max-h-[600px] object-cover rounded-xl shadow-xl"
            />
          </div>
          */}

          <!-- Detalles dinÃ¡micos segÃºn categorÃ­a -->
          <div class="md:w-2/3">
            <p class="text-sm text-gray-500 uppercase">
              CategorÃ­a: {categoriaData?.nombre}
            </p>
            <h1 class="text-3xl font-bold text-gray-800 mt-2 mb-4">
              {productoSeleccionado.nombre}
            </h1>

            <!-- Componente dinÃ¡mico -->
            <ComponenteDetalles producto={productoSeleccionado} />
          </div>
        </>
      ) : (
        <p class="text-center text-red-500 w-full">Producto no encontrado.</p>
      )}
    </div>
  </div>
</Layout>
