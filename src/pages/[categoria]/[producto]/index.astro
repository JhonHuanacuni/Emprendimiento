---
import Layout from "../../../layouts/Layout.astro";
import productosJson from "../../../data/productos.json";
import { generarSlug } from "../../../utils/slug"; // 📌 Importamos la función para generar slugs


// 📌 Función para generar rutas estáticas
export async function getStaticPaths() {
  let paths: { params: { categoria: string; producto: string } }[] = [];

  // Recorremos todas las categorías y productos
  Object.entries(productosJson).forEach(([categoria, productos]) => {
    (productos as { nombre: string }[]).forEach((producto) => {
      const slug = generarSlug(producto.nombre); // 📌 Generamos el slug correctamente
      paths.push({ params: { categoria, producto: slug } });
    });
  });

  return paths;
}

// 📌 Obtener la categoría y el producto desde la URL (sin `as` cast)
const { categoria, producto } = Astro.params;

// 📌 Verificar que la categoría existe y obtener sus productos
const productos = categoria && categoria in productosJson
  ? productosJson[categoria as keyof typeof productosJson]
  : [];

// 📌 Buscar el producto comparando el slug generado con el slug de la URL
const productoSeleccionado = productos.find(
  (p) => generarSlug(p.nombre) === producto
);
---

<Layout>
  <div class="container mx-auto px-4 py-8 flex flex-col md:flex-row gap-8">
    <!-- Imagen del Producto -->
    <div class="w-full md:w-1/2">
      {categoria === 'Libros' && Array.isArray(productoSeleccionado?.link) ? (
        <img src={productoSeleccionado.link[0]} alt={productoSeleccionado.nombre} class="w-full rounded-lg shadow-md" />
      ) : (
        <img src={Array.isArray(productoSeleccionado?.link) ? productoSeleccionado.link[0] : productoSeleccionado?.link} alt={productoSeleccionado?.nombre} class="w-full rounded-lg shadow-md" />
      )}
    </div>

    <!-- Detalles del Producto -->
    <div class="w-full md:w-1/2">
      <p class="text-sm text-gray-500">Categorías &gt; {categoria}</p>
      <h1 class="text-3xl font-bold mt-2">{productoSeleccionado?.nombre}</h1>

      {categoria === 'Libros' ? (
        <>
          <p class="text-xl text-red-500 font-semibold mt-1">
            Autor: {productoSeleccionado && 'autor' in productoSeleccionado ? productoSeleccionado.autor : 'Información no disponible'}
          </p>
          <p class="text-gray-600 mt-1">Editorial: {productoSeleccionado && 'autor' in productoSeleccionado ? productoSeleccionado.editorial : 'Información no disponible'}</p>
          <p class="text-gray-600">Idioma: {productoSeleccionado && 'autor' in productoSeleccionado ? productoSeleccionado.idioma : 'Información no disponible'}</p>
          <p class="text-gray-600">Páginas: {productoSeleccionado && 'autor' in productoSeleccionado ? productoSeleccionado.paginas : 'Información no disponible'}</p>
          <p class="text-gray-600">Formato: {productoSeleccionado && 'autor' in productoSeleccionado ? productoSeleccionado.formato : 'Información no disponible'}</p>
          <p class="text-gray-600">Publicado: {productoSeleccionado && 'autor' in productoSeleccionado ? productoSeleccionado.publicacion : 'Información no disponible'}</p>
          <p class="text-gray-600">Género: {productoSeleccionado && 'autor' in productoSeleccionado ? productoSeleccionado.genero : 'Información no disponible'}</p>
          <p class="text-yellow-500 font-semibold">Valoración: {productoSeleccionado && 'autor' in productoSeleccionado ? productoSeleccionado.valoracion : 'Información no disponible'}/5</p>
        </>
      ) : (
        <>
          <p class="text-xl text-red-500 font-semibold mt-1">{productoSeleccionado?.descripcion}</p>
          <a href={Array.isArray(productoSeleccionado?.link) ? productoSeleccionado.link[0] : productoSeleccionado?.link} target="_blank" class="inline-block bg-blue-500 text-white py-2 px-4 rounded-md mt-4">Visitar Producto</a>
        </>
      )}

      <!-- Descripción común -->
      <div class="mt-4">
        <h2 class="text-lg font-bold">Descripción</h2>
        <p class="text-gray-700 mt-2">{productoSeleccionado?.descripcion}</p>
      </div>
    </div>
  </div>
</Layout>
